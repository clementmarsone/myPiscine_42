---
title: 'C7M4L3A1: Aesthetics and Visualizations'
output: html_document
---

## Background for this activity
[WRITER TO CONSTRUCT]
- This should be the same set of sentences before every activity most likely
- This can be in the text of the Coursera item (before learners click on the link)

## The Scenario

[WRITER TO CONSTRUCT]
- Continued from the last activity (C7M4L2A1_GGPlot)
- You work at a large grocery company with many different brands
- You want to share some visuals at a presentation on supermarket trends
- Now, you want to show some visualizations that focus on different 'cuts' and highlights different parts of the data

## Step 1: Import your data

[WRITER TO EDIT]

If you haven't exited out of your RStudio since doing the last activity, [Placeholder Name: GGPlot and You], then you can skip this step. Rerunning it won't be an issue either :)

Run the code below to read in the file 'hotel_bookings.csv' into a dataframe that you will use for your visualization. 

Note, we will name the dataframe 'hotel_bookings' to be clear on what the data is. 

If you experience errors, remember that you can search the internet and the RStudio community for help:
https://community.rstudio.com/#

The data is originally from the article Hotel Booking Demand Datasets (https://www.sciencedirect.com/science/article/pii/S2352340918315191), written by Nuno Antonio, Ana Almeida, and Luis Nunes for Data in Brief, Volume 22, February 2019.

The data was downloaded and cleaned by Thomas Mock and Antoine Bichat for #TidyTuesday during the week of February 11th, 2020 (https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-02-11/readme.md).

You can learn more about the dataset here:
https://www.kaggle.com/jessemostipak/hotel-booking-demand

```{r load data}
hotel_bookings <- read.csv("hotel_bookings.csv")
```

## Step 2: Refresh Your Memory

[WRITER TO EDIT]
Use head() and colnames() to refresh your memory and what the dataset contains. Run two code chunks below to look at a sample of the data and also see all the column names.

```{r look at data}
head(hotel_bookings)
```

```{r look at column names}
colnames(hotel_bookings)
```

## Step 3: Install and load the 'ggplot2' package (optional)
Remember, if you haven't already installed and loaded the 'ggplot2' package, you'll need to do that before you can use the ggplot() function. You only have to do this once though, not every time you call ggplot().

You can skip this step if you haven't closed your RStudio account since doing the last activity - otherwise, you can hit 'cancel' when the warning message pops up telling you that have already downloaded the ggplot2 package.

If you have - you can run the code chunk below to install and load 'ggplot2' - this may take a few minutes!

```{r loading and installing ggplot2, echo=FALSE, message=FALSE}
install.packages('ggplot2')
library(ggplot2)
```

## Step 4: Making a Bar Chart

[WRITER TO EDIT]
Your stakeholder now wants to run promotions based on different booking distributions, but first they need to know how many of the transactions are occurring for each different distribution type.

Remember, we can tell ggplot() what type of chart we want to create by using geom_ 

Previously, we used geom_point to make a scatterplot comparing lead time and number of children. Now, we'll use geom_bar to make a bar chart. 

Try running the code below to com
```{r example chart}
ggplot(data = hotel_bookings) +
  geom_bar(mapping = aes(x = distribution_channel))
```

[WRITER TO EDIT -> OPPORTUNITY FOR A QUIZ QUESTION]
Question: What distribution type has the most number of bookings?
Answer: TA/TO (run the code in lines 79-80)

## Step 5: Diving deeper into bar charts
[WRITER TO EDIT]
Your stakeholder really laked the previous bar chart, but had more questions.

"Well, is that different depending on whether or not they have a deposit?"

"What about their market segment?"

Try running the code below to answer the question about deposits Notice, we use 'fill=deposit_type' to accomplish this.

```{r pressure, echo=FALSE}
ggplot(data = hotel_bookings) +
  geom_bar(mapping = aes(x = distribution_channel, fill=deposit_type))
```
Try running the code below to answer the question about different market segments. Notice, we use 'fill=market_segment' to accomplish this.

```{r pressure, echo=FALSE}
ggplot(data = hotel_bookings) +
  geom_bar(mapping = aes(x = distribution_channel, fill=market_segment))
```

## Step 6: Facets galore
[WRITER TO EDIT]

Your stakeholder comes back to you and says, "I'm having trouble comparing the differences - can you make a separate chart for each?"

Lucky for you,  you realize that the 'facet_' function can do this very quickly!

Run the code chunk below to create a different chart for each deposit type.
```{r creating a plot}
ggplot(data = hotel_bookings) +
  geom_bar(mapping = aes(x = distribution_channel)) +
  facet_wrap(~deposit_type)
```

Run the code chunk below to create a different chart by market segment.
```{r creating a plot}
ggplot(data = hotel_bookings) +
  geom_bar(mapping = aes(x = distribution_channel)) +
  facet_wrap(~market_segment)
```

Remember, facet_grid does something similar. Run the code chunk below to check it out!

[Note for writer - you may want to explain more, if so you can refer to this:https://stackoverflow.com/questions/20457905/whats-the-difference-between-facet-wrap-and-facet-grid-in-ggplot2, the key takeaway is that facet_grid() will include plots even if they're empty]
```{r creating a plot}
ggplot(data = hotel_bookings) +
  geom_bar(mapping = aes(x = distribution_channel)) +
  facet_grid(~deposit_type)
```

Now, what if we wanted to put this all on one chart, and look at the differences by deposit type and market segment?

Run the code chunk below to find out (note how we use the ~ character ahead of each variable we want to split out by)
```{r creating a plot}
ggplot(data = hotel_bookings) +
  geom_bar(mapping = aes(x = distribution_channel)) +
  facet_wrap(~deposit_type~market_segment)
```

Hm, that might be too overwhelming to be readable, but now you know how to do this going forward if you need to!

## Activity Wrap Up
Note to editor - We will need to add a wrap up section at the end of all of these activities. 

Review what was learned and encourage learners to modify the rmd to do more creative things or work in RStudio using the code from here.

Also include reflective  components.